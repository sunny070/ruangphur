<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Support\Str;

class Application extends Model
{
    use HasFactory;
    protected $casts = [
        'created_at' => 'datetime',
        'updated_at' => 'datetime',
        'verified_at' => 'datetime',
        'approved_at' => 'datetime',
        'processed_at' => 'datetime',
    ];
    protected $fillable = [
        'applicant_id',
        'deceased_id','transport_id','attachment_id',
        'status',
        'application_no',
        'verified_at',
        'approved_at',
        'processed_at',
    ];
    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::creating(function ($application){
            do {
                $applicationId = 'MZ-' . Str::upper(Str::random(8));
            } while (Application::query()->where('application_no', $applicationId)->exists());

            $application->application_no = $applicationId;
        });
    }
//    public function transport()
//    {
//        return $this->hasOneThrough(
//            Transport::class,
//            Deceased::class,
//            'application_id', // Foreign key on the `deceaseds` table
//            'deceased_id',    // Foreign key on the `transports` table
//            'id',             // Local key on the `applications` table
//            'id'              // Local key on the `deceaseds` table
//        );
//    }
//
    public function applicant()
    {
        return $this->belongsTo(Applicant::class);
    }
    public function deceased()
    {
        return $this->belongsTo(Deceased::class);
    }

    public function transports():BelongsTo
    {
        return $this->belongsTo(Transport::class);
    }

    public function attachments():BelongsTo
    {
        return $this->belongsTo(Attachment::class);
    }


}
